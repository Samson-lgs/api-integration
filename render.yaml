services:
  # PostgreSQL Database
  - type: pserv
    name: air-quality-postgres
    env: docker
    plan: standard
    region: oregon
    dockerfilePath: ./Dockerfile.postgres
    envVars:
      - key: POSTGRES_DB
        value: air_quality_db
      - key: POSTGRES_USER
        value: airquality
      - key: POSTGRES_PASSWORD
        generateValue: true
    disk:
      name: postgres-data
      mountPath: /var/lib/postgresql/data
      sizeGB: 10

  # Backend API Service
  - type: web
    name: air-quality-api
    env: docker
    plan: standard
    region: oregon
    dockerfilePath: ./Dockerfile.backend
    healthCheckPath: /api/health
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: air-quality-postgres
          property: connectionString
      - key: FLASK_ENV
        value: production
      - key: SECRET_KEY
        generateValue: true
      - key: CORS_ORIGINS
        value: https://air-quality-monitor.onrender.com
      - key: MODEL_PATH
        value: ./models
      - key: AUTO_RETRAIN
        value: true
      - key: RETRAIN_INTERVAL_HOURS
        value: 24
    autoDeploy: true
    scaling:
      minInstances: 1
      maxInstances: 3
      targetCPUPercent: 75
      targetMemoryPercent: 80

  # Frontend Service
  - type: web
    name: air-quality-frontend
    env: docker
    plan: starter
    region: oregon
    dockerfilePath: ./Dockerfile.frontend
    healthCheckPath: /
    envVars:
      - key: VITE_API_URL
        fromService:
          name: air-quality-api
          type: web
          property: host
    autoDeploy: true

  # Data Collector Background Worker
  - type: worker
    name: air-quality-collector
    env: docker
    plan: starter
    region: oregon
    dockerfilePath: ./Dockerfile.backend
    dockerCommand: python scheduled_collector.py
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: air-quality-postgres
          property: connectionString
      - key: COLLECTION_INTERVAL_MINUTES
        value: 60
    autoDeploy: true

  # Model Retraining Worker
  - type: worker
    name: air-quality-retrainer
    env: docker
    plan: standard
    region: oregon
    dockerfilePath: ./Dockerfile.backend
    dockerCommand: python automated_retraining.py
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: air-quality-postgres
          property: connectionString
      - key: RETRAIN_INTERVAL_HOURS
        value: 24
      - key: MIN_NEW_SAMPLES
        value: 100
      - key: MODEL_PATH
        value: ./models
      - key: PERFORMANCE_THRESHOLD
        value: 0.1
    autoDeploy: true

databases:
  - name: air-quality-postgres
    databaseName: air_quality_db
    user: airquality
    plan: standard
    region: oregon
